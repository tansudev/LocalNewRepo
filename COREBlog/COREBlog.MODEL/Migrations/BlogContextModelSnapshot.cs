// <auto-generated />
using System;
using COREBlog.MODEL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace COREBlog.MODEL.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("COREBlog.MODEL.Entities.Category", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CreateComputerName")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("CreateIP")
                        .HasMaxLength(15);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(15);

                    b.Property<int>("Status");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("COREBlog.MODEL.Entities.Comment", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CommenText")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreateComputerName")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("CreateIP")
                        .HasMaxLength(15);

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(15);

                    b.Property<Guid?>("PostID");

                    b.Property<int>("Status");

                    b.Property<Guid?>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("PostID");

                    b.HasIndex("UserID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("COREBlog.MODEL.Entities.Post", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryID");

                    b.Property<string>("CreateComputerName")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("CreateIP")
                        .HasMaxLength(15);

                    b.Property<string>("ImagePath");

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(15);

                    b.Property<string>("PostDetail")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.Property<string>("Tags")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<Guid>("UserID");

                    b.Property<int>("ViewCount");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("UserID");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("COREBlog.MODEL.Entities.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreateComputerName")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("CreateIP")
                        .HasMaxLength(15);

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastIPAddress")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("LastLogin");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("ModifiedComputerName")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<string>("ModifiedIP")
                        .HasMaxLength(15);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("COREBlog.MODEL.Entities.Comment", b =>
                {
                    b.HasOne("COREBlog.MODEL.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostID");

                    b.HasOne("COREBlog.MODEL.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("COREBlog.MODEL.Entities.Post", b =>
                {
                    b.HasOne("COREBlog.MODEL.Entities.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COREBlog.MODEL.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
